#include<bits/stdc++.h>
#define REP(i,n) for (int i = 1; i <= n; i++)
#define mod 1000000007
#define pb push_back
#define ff first
#define ss second
#define ii pair<int,int>
#define vii vector<ii>
#define lli long long int
#define INF 1000000000
#define endl '\n'
const double PI = 3.141592653589793238460;
typedef std::complex<double> Complex;
typedef std::valarray<Complex> CArray;
using namespace std;
vector<int> arr[10001];
int visit[10001];
int subs[10001];
int dfs(int node){
	visit[node]=1;
	int currsize=1;
	for(int child:arr[node]){
		if(visit[child]==0)
		currsize+=dfs(child);
	}
	return subs[node]=currsize;
}
int main(){
	int n,a,b;
	cin>>n;
	for(int i=1;i<=n-1;i++){
		cin>>a>>b;
		arr[a].push_back(b);
		arr[b].push_back(a);
	}
	dfs(1);
	for(int i=1;i<=n-1;i++)
	cout<<subs[i]<<" ";
	
	return 0;
}
