#include<bits/stdc++.h>
#define REP(i,n) for (int i = 1; i <= n; i++)
#define mod 1000000007
#define pb push_back
#define ff first
#define ss second
#define ii pair<int,int>
#define vii vector<ii>
#define lli long long int
#define INF 1000000000
#define endl '\n'
const double PI = 3.141592653589793238460;
typedef std::complex<double> Complex;
typedef std::valarray<Complex> CArray;
using namespace std;
vector<int> arr[100001];
int visit[100001];
int cc;
void dfs(int node){
	visit[node]=1;cc++;
	for(int child:arr[node])
	if(visit[child]==0)
	dfs(child);
}
int main(){
	int t,a,b,n,m;
	cin>>t;
	while(t--){
		cin>>n>>m;
		for(int i=1;i<=n;i++){
		visit[i]=0;arr[i].clear();}
		for(int i=1;i<=n;i++) arr[i].clear(),visit[i]=0;
	for(int i=0;i<m;i++)
	{
		cin>>a>>b;
		arr[a].pb(b);
		arr[b].pb(a);
	}
		int ccount=0;
		long long res=1;
		for(int i=1;i<=n;i++){
			
		if(visit[i]==0){
			cc=0;
			dfs(i),ccount++;	
		res=(res*cc)%mod;
		}
		}
		cout<<ccount<<" "<<res<<endl;
	}
}
