#include<bits/stdc++.h>
#define REP(i,n) for (int i = 1; i <= n; i++)
#define mod 1000000007
#define pb push_back
#define ff first
#define ss second
#define ii pair<int,int>
#define vii vector<ii>
#define lli long long int
#define INF 1000000000
#define endl '\n'
const double PI = 3.141592653589793238460;
typedef std::complex<double> Complex;
typedef std::valarray<Complex> CArray;
using namespace std;
vector<int> arr[1000001];
int visit[1000001];
int curr;
int cc[1000001];
void dfs(int node){
	visit[node]=1;
	cc[node]=curr;
	for(int child:arr[node]){
		if(visit[child]==0)
		dfs(child);
	}
}
int main(){
	int t,n ,m,a,b;
	string op;
	cin>>t;
	while(t--){
		curr=0;
		cin>>n>>m;
		for(int i=1;i<=n;i++){
			arr[i].clear();
			visit[i]=0;
		}
		vector<pair<int,int>> edgelist;
		for(int i=1;i<=m;i++){
			cin>>a>>op>>b;
			if(op=="="){
				arr[a].push_back(b),arr[b].push_back(a);
			}
			else{
				edgelist.push_back({a,b});
			}
			
		}
		for(int i=1;i<=n;i++){
			if(visit[i]==0)curr++,dfs(i);
		}
		bool flag=true;
		for(int i=0;i<edgelist.size();i++){
			a=edgelist[i].first;
			b=edgelist[i].second;
			if(cc[a]==cc[b]){
			flag=false;
			break;}
		}
		if(flag)cout<<"YES"<<endl;
		else
		cout<<"NO"<<endl;
		
	}return 0;
}
